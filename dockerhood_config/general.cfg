[PROJECT]
project name = myproject

[BASE IMAGE]
# Warning! Do not change these parameters if you are not really sure
# about what are you doing.
# This section set the starting point for all the other images created by this
# software. The type can be "image" or "template".
# If you select "image", then all the Dockerfiles created by Dockerhood for its
# docker images will have "FROM IMAGENAME" as their first line.
# Otherwise, if you choose "template" then in the filed "name" you have to write
# the name of the template that YOU have written. This means that Dockerhood will
# build an image starting from a file named "Dockerfile" in a folder named
# "YOURNAME.template" (inside the user template directory). This is the only
# user template that is allowed to have a "FROM IMAGENAME" in its dockerfile.
# When you do this, please take into account that Dockerhood will perform several
# operations when building its images: in particular, several packages are
# installed using apt-get and it will create a user named "user" with a
# particular UID ang GID. All this operations have been written for a
# ubuntu 16.04 image. If you change this, there is a concrete possibility that
# the building mechanism will fail. In the very same way, if you build a
# template, try to use an ubuntu:16.04 as starting image and to change the
# original image as little as possible. In conclusion, there must be a *REALLY*
# good reason to change the following parameters
type = image
name = ubuntu:16.04


[DIRECTORIES]
system templates = $BASEDIR/system_templates
user templates = $BASEDIR/user_templates
keys = $BASEDIR/keys
scratch = $BASEDIR/docker_scratch

[LOGGER]
file = $BASEDIR/myproject.log
verbosity = info

[STATIC NETWORK]
# This is the network that will contain the static services
network = 10.100.0.0
port = 10000
slurm_master_ip = 10.100.0.2

# [TLS AUTHENTICATION]
# These options have no meaning if no host uses authentication
# in the hosts.cfg configuration file.
# ca cert = /home/ubuntu/docker_keys/ca.pem
# client cert = /home/ubuntu/docker_keys/cert.pem
# client key = /home/ubuntu/docker_keys/key.pem
